                       <<<<<<<<<<<<<<<<<<<<<<<<ARRAYLER>>>>>>>>>>>>>>>>>>>>>>>>>>

#include <stdio.h>

int main(){
                                   
        int sayilar[] = {1,2,3,4,5};
        int i;

    for(i = 0;i<5;i++){

         printf("%d\n",sayilar[i]);
    }                           
                                       
    return 0;
}

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


#include <stdio.h>

int main(){
        int i;
        int depo[5]; 
        int total = 0;

    for(i = 0; i<5;i++){
        printf("sayi gir:\n ");
        scanf("%d",&depo[i]);
        total += depo[i];
        

    }
      total /= 5;
    printf("%d",total);
                        
    return 0;
}

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#include <stdio.h>

int main(){
      
     char isim[20];
     printf("Bir isim giriniz:\n");
     scanf("%[^\n]s",isim);
     printf("Bir isim giriniz: %s",isim);



  return 0;
}


 %[^\n]s >>>>  dediğimiz zaman scanf in normalde yaptığının aksine boşluk ve boşluktan sonraki karakterleride alabilmemize olanak tanınıyor.


---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#include <stdio.h>

int main() {
    int catcher[50]; 
    int i = 0, s1 = 1, s2 = 1, a;
    int counter = 0;

    // Kullanıcıdan dizi miktarını alıyoruz
    printf("Dizi miktarini giriniz: ");
    scanf("%d", &i);
    a = i;  // a değişkenine i değerini atıyoruz

    // İlk iki Fibonacci sayısını yazdırıyoruz
    printf("%d\n", s1);
    printf("%d\n", s2);

    // Dizinin ilk iki elemanını atıyoruz
    catcher[0] = s1;       
    catcher[1] = s2;

    // Fibonacci dizisini oluşturuyoruz
    for (int j = 2; j < i; j++) {
        counter = s1 + s2;
        printf("%d\n", counter);
        catcher[j] = counter;

        // Değerleri güncelliyoruz
        s1 = s2;
        s2 = counter;            
    } 

    // Dizideki saklanan sayıları tersten yazdırıyoruz
    for (int j = i - 1; j >= 0; j--) {
        printf("Depolanan sayilar: %d\t", catcher[j]);
    }

    return 0;
}

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


#include <stdio.h>

int main(){
         
  /*     
      int matris[3][3] = {{1,2,3},{4,5,6},{7,8,9}};
      printf("Matris: %d ",matris[2][2]);

   */  
      int value;
      int s = 0 ,i = 0 ;
      int matris[3][3];
      for(i = 0 ; i<3 ; i++){

            if (i == 0){
              for(s = 0; s<3 ; s++){
                  printf("%d.Satir %d. Sutun için bir sayi giriniz: ",i,s);
                  scanf("%d",&matris[i][s]);
              }
              
            }
            if (i == 1){
              for(s = 0 ; s<3 ; s++){
                  printf("%d.Satir %d. Sutun için bir sayi giriniz: ",i,s);
                  scanf("%d",&matris[i][s]);
              }
              
            }
            if (i == 2){
              for(s = 0; s<3 ; s++){
                  printf("%d.Satir %d. Sutun için bir sayi giriniz: ",i,s);
                  scanf("%d",&matris[i][s]);
              }
              
            }

      }
        
      for(i = 0 ; i<3 ; i++){
               printf("\n");
            if (i == 0){
              for(s = 0; s<3 ; s++){
                  printf("%d",matris[i][s]);  

               }            
            }
               
            if (i == 1){
              for(s = 0 ; s<3 ; s++){
                  printf("%d",matris[i][s]);
               }             
            }
               
            if (i == 2){
              for(s = 0; s<3 ; s++){
                  printf("%d",matris[i][s]);
               }             
            }

      }
      



   return 0;
}

  <<<<<<<<<<<<<<<<<<<<ÜSTTEKİ BENİM YAZDIĞIM ALTTAKİ İSE  KOLAY YOLU>>>>>>>>>>>>>>>>>>>>>>

#include <stdio.h>

int main() {
    int matris[3][3];
    int i, s;

    // Matris elemanlarını kullanıcıdan alıyoruz
    for (i = 0; i < 3; i++) {
        for (s = 0; s < 3; s++) {
            printf("%d. Satir %d. Sutun için bir sayi giriniz: ", i, s);
            scanf("%d", &matris[i][s]);
        }
    }

    // Matris elemanlarını ekrana yazdırıyoruz
    printf("Matris:\n");
    for (i = 0; i < 3; i++) {
        for (s = 0; s < 3; s++) {
            printf("%d ", matris[i][s]);
        }
        printf("\n");
    }

    return 0;
}




<<<<<<<<<<<<<<<<<<<<<<<ÖNEMLİ>>>>>>>>>>>>>>>>>>>>>>
Scanf   kullanımında  format belirleyiciden sonra boşluk bırakılması olası hataların önüne geçebilir.
Boşluk Karakteri Problemi ve Çözümü: scanf fonksiyonu, karakter girişi beklerken boşluk
 karakterini (ve diğer boş karakterleri) atlamak için önünde bir boşluk bırakmak önemlidir.



---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#include <stdio.h>
   
   void topla(int s1,int s2){
      int s3 = s1 + s2;
      printf("Sonuc: %d",s3);
   }
     void cikart(int s1,int s2){
      int s3 = s1 - s2;
      printf("Sonuc: %d",s3);
   }
     void bol(int s1,int s2){
      int s3 = s1 / s2;
      printf("Sonuc: %d",s3);
   }
     void carp(int s1,int s2){
      int s3 = s1 * s2;
      printf("Sonuc: %d",s3);
   }

int main(){
         int a;
         int b;
         char operator ;
      printf("Bir sayi giriniz: ");
      scanf("%d",&a);
      printf("Islem operatorunu giriniz(/,*,-,+): ");
      scanf(" %c",&operator);
      printf("Bir sayi daha giriniz: ");
      scanf("%d",&b);

   
         if (operator == '+'){
            topla(a,b);
         }
          if (operator == '-'){
            cikart(a,b);
         }
          if (operator == '/'){
            bol(a,b);
         }
         if (operator == '*'){
            carp(a,b);
         }
         else{
            printf("Ne diyon moruk? ");
         }
         
}

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
#include <stdio.h>
   int fak(int sayi){
      
      int result = 1;

      while (sayi > 0)
      {
        result *= sayi;

         sayi--;
      }
         
      return result;
         
   }


int main(){
   int sayi;
   int result = 0;
   printf("Faktoriyelini istediginiz sayiyi giriniz: ");
      scanf(" %d",&sayi);  
      result = fak(sayi);
      printf("Sonuc: %d",result);
  
   return 0;
}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#include <stdio.h>
int asaltest(int s1){
   int counter = 0;
   int guest;
   guest = s1;

   while (s1 > 2){
      s1--;
      counter = guest % s1;
      if ( counter == 0 )
         return 0;   
   }
   return 1;  
}

int main(){
   int s1;
   int result;
      printf("Bir sayi giriniz: ");
      scanf("%d",&s1);
      result = asaltest(s1);
      printf("%d",result);
   return 0;
}


Asal sayi olup olmadığını kontrol eden program.


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Parametre olarak <Array> kullanıcaksak eğer Array in boyutunu ayrıca bildirmemiz gerekir görüldüğü gibi

#include <stdio.h>
int carp(int value[],int size){
   int s1  = 4;
   int carpim = 1;
   for(s1;s1>=0;s1--){
      carpim *= value[s1];
   }
   return carpim;
}
int main(){
   int result = 0;
   int values[5] = {4,5,2,4,2};
   result = carp(values,5);
      printf("Carpimin sonucu: %d",result);
   return  0;
}

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



#include <stdio.h>   
   int uzunlukdon(char name[]){
      int uzunluk = 0;
      int i = 0;
      for(i;name[i] != '\0';i++){
         uzunluk++;
      }
      return uzunluk;
   }
int main(){
   char isim[30];
   printf("Bir kelime gir: ");
   scanf("%[^\n]s",&isim);
   /*
   'y'
   'i'
   'g'
   'i'
   't'
   '\0'>>>>>>>  bittiğini anlamak için sistem kendisi koyar bunu.
   şeklinde belleğe yazilir  
   */
      printf("Array in uzunlugu: %d",uzunlukdon(isim));
   return 0;
}

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#include <stdio.h>   
#include <string.h>

void terscevir(char dizi[]){
   int i,uzunluk,gecici;
   uzunluk = strlen(dizi);
   for(i = 0; i< uzunluk / 2;i++){
      gecici = dizi[i];
      dizi[i] = dizi[uzunluk-1-i];
      dizi[uzunluk-1-i] = gecici;
   }
}
int main(){
   char text[200];
   scanf("%s",&text);
   terscevir(text);
   printf("%s",text);
   return 0;
}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

